pipeline {
  agent any
  
  stages {
    stage('Checkout') { 
      steps {
        //bat 'echo passed'
        git branch: 'main', credentialsId:'d595fcb3-2cc0-444a-89ee-5f63ab583082', url: 'git@github.com:ShreyaRaghuvanshi1/L00179092_pipeline.git'
      }
    }
    
   
stage('Build and Test') {
      steps {
        
        // build the project and create a JAR file
        bat 'cd Mvn_L00179092 && mvn clean package'
      }
    }
  stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://localhost:9000" 
      }
       steps {
        withCredentials([string(credentialsId: 'sonarqube_L00179092', variable: 'SONAR_AUTH_TOKEN')]) {
          bat 'cd Mvn_L00179092 && mvn sonar:sonar \
  -Dsonar.projectKey=WebApp_L00179092 \
  -Dsonar.host.url=http://localhost:9000 \
  -Dsonar.login=838a116cf359d3ec525b15388ea72fd7b3897a0a'
        }
      }
    }
stage('Build Docker Image') {
      environment {
        //DOCKER_IMAGE = "ShreyaRaghuvanshi ."
        // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            bat 'cd Mvn_L00179092 && docker build -t docker/shreya-raghuvanshi .'
           
        }
      }
    }


stage('Push Docker Image'){
 environment {
        //DOCKER_IMAGE = "shreya-raghuvanshi ."
        // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
   //  def registry_url = "shreyaraghuvanshi1/docker/shreya-raghuvanshi"
      }

  steps{
    script {
           // def registry_url = "registry.hub.docker.com/"
      //  def dockerImage = docker.image('docker/shreya-raghuvanshi')
          
            //docker.withRegistry('http://registry.hub.docker.com/', "docker-cred") 
              //  bat 'docker tag docker/shreya-raghuvanshi:latest docker:new'
               // bat 'docker push docker/shreya-raghuvanshi:latest'
//withDockerRegistry([credentialsId: "docker-cred", url: "https://index.docker.io/v1"])

 docker.withRegistry('https://index.docker.io/v1/', "docker-cred"){
bat "docker tag docker/shreya-raghuvanshi:latest shreyaraghuvanshi1/docker_repo:latest"
bat "docker push shreyaraghuvanshi1/docker_repo:latest"
}
            
        }
}
    }

      stage('Deploy to Kubernetes'){
        steps{
            script{
kubernetesDeploy (configs: 'Mvn_L00179092/deploymentservice.yaml', kubeconfigId: 'kubernetes_L00179092',
dockerCredentials:[[credentialsId: 'docker-cred']])
                
}
}
}
}
}

